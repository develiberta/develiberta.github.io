[ { "title": "Protection", "url": "/posts/os-protection/", "categories": "CS, OS", "tags": "CS, OS", "date": "2023-03-14 19:00:00 +0900", "snippet": "목적 현대 컴퓨터 시스템에서 보호의 목적과 원칙에 대해 논의한다. 접근 행렬과 결합한 보호 도메인이 프로세스가 접근할 수 있는 자원을 지정하는 데 어떻게 사용되는지 설명한다. 자격- 및 언어- 기반의 보호 시스템을 설명한다. 보호 기법이 시스템 공격을 완화할 방법을 설명한다.실천 목표 현대 컴퓨터 시스템에서 보호의 목적과 원칙에 대해 논의한다. 접근 행렬과 결합한 보호 도메인이 프로세스가 접근할 수 있는 자원을 지정하는 데 어떻게 사용되는지 설명한다. 자격- 및 언어- 기반의 보호 시스템을 설명한다. 보호 기법이..." }, { "title": "Security", "url": "/posts/os-security/", "categories": "CS, OS", "tags": "CS, OS", "date": "2023-03-14 18:30:00 +0900", "snippet": "목적 보안상의 문제점들(threats)과 공격에 대해 논의한다. 암호화, 인증, 해싱의 근본 원리를 설명한다. 연산에 있어서 암호 작성법의 사용을 검토한다. 보안상의 공격에 대한 다양한 대응책을 논의한다.실천 목표 보안상의 문제점들(threats)과 공격에 대해 논의한다. 암호화, 인증, 해싱의 근본 원리를 설명한다. 연산에 있어서 암호 작성법의 사용을 검토한다. 보안상의 공격에 대한 다양한 대응책을 논의한다.용어 보안 _Security 시스템과 데이터의 무결성이 보존될 것이라는 확신의 척도 ..." }, { "title": "Storage Management", "url": "/posts/os-storage-management/", "categories": "CS, OS", "tags": "CS, OS", "date": "2023-02-19 18:00:00 +0900", "snippet": "목적 물리적 스토리지의 구조를 이해한다. 논리적 스토리지에서 파일을 저장하는 방법을 설명한다.실천 목표 물리적 스토리지의 구조를 이해한다. 논리적 스토리지에서 파일을 저장하는 방법을 설명한다.물리적 스토리지 비휘발성으로 컴퓨터의 보조적인 저장장치 HDD, SDD, Flash Memory, NAND Memory magnetic tapes, optical disks, cloud storage HDD moving-head disk mechanismHDD Scheduling 스케줄링은 seek time을 최소화하고 b..." }, { "title": "Virtual Memroy", "url": "/posts/os-virtual-memory/", "categories": "CS, OS", "tags": "CS, OS", "date": "2023-02-19 18:00:00 +0900", "snippet": "목적 가상 메모리를 정의하고 그 이점을 설명한다 요구 페이징을 사용하여 페이지가 메모리에 적재되는 방법을 설명한다. FIFO, 최적 및 LRU 페이지 교체 알고리즘을 적용한다. 프로세스의 작업 집합을 설명하고 프로그램 지역성과 어떤 관련이 있는지 설명한다. Linux, Windows 10 및 Solaris가 가상 메모리를 관리하는 방법을 설명한다. C 프로그래밍 언어로 가상 메모리 관리자 시뮬레이션을 설계한다.실천 목표 가상 메모리가 무엇인지 이해하고 필요성을 설명한다. 요구 페이징을 이용해서 페이지가 메모리에 ..." }, { "title": "Main Memroy", "url": "/posts/os-main-memory/", "categories": "CS, OS", "tags": "CS, OS", "date": "2023-02-05 18:00:00 +0900", "snippet": "목적 논리 주소와 물리 주소의 차이점과 주소를 변환할 때 MMU(메모리 관리 장치)의 역할을 설명한다. 메모리를 연속적으로 할당하기 위해 최초, 최적 및 최악 접합 전략을 적용한다. 내부 및 외부 단편화의 차이점을 설명한다. TLB (translation look-aside buffer)가 포함된 페이징 시스템에서 논리 주소를 물리 주소로 변환한다. 계층적 페이징, 해시 페이징 및 역 페이지 테이블을 설명한다. IA-32, x86-64 및 ARMv8 아키텍처의 주소 변환에 관해 설명한다.실천 목표 기본 하드웨어에서..." }, { "title": "Deadlocks", "url": "/posts/os-deadlocks/", "categories": "CS, OS", "tags": "CS, OS", "date": "2023-01-15 18:00:00 +0900", "snippet": "목적 Mutex 락을 사용할 때 어떻게 교착 상태가 발생할 수 있는지 이해한다. 교착 상태를 특징 짓는 4가지 필수 조건을 정의한다. 자원 할당 그래프에서 교착 상태 상황을 식별한다. 교착 상태 예방을 위한 4가지 방법을 평가한다. 교착 상태 회피를 위해 은행의 알고리즘을 적용한다. 교착 상태 감지 알고리즘을 적용한다. 교착 상태에서 복구하기 위한 접근법을 평가한다.실천 목표 Mutex 락을 사용할 때 어떻게 교착 상태가 발생할 수 있는지 예제를 통해 확인한다. 교착 상태를 특징 짓는 4가지 필수 조건과 그 이..." }, { "title": "OS Synchronization Examples", "url": "/posts/os-synchronization-examples/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-12-25 18:00:00 +0900", "snippet": "목적 동기화 예제들을 이해한다.실천 목표 유한 버퍼, readers-writer 및 식사하는 철학자 동기화 문제에 관해 설명한다.동시성 제어 문제의 분류 유한 버퍼 문제 The Bounded Buffer Problem Readers-Writers 문제 The Readers-Writers Problem 식사하는 철학자들 문제 The Dining Philosophers Problem유한 버퍼 문제 (The Bounded Buffer Problem) 생산자-소비자 문제 중 다음의 특정 조건을 만족 n개의 ..." }, { "title": "OS Synchronization Tools", "url": "/posts/os-synchronization-tools/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-11-12 13:00:00 +0900", "snippet": "목적 협력적 프로세스가 동시에 데이터에 접근할 때 발생하는 문제를 이해한다. 임계구역 문제에 대한 하드웨어 해결책과 소프트웨어 해결책을 이해한다.실천 목표 임계구역 문제를 설명하고 경쟁 조건(Race Condition)을 설명한다. 메모리 장벽, compare-and-swap 연산 및 원자적 변수를 사용하여 임계구역 문제에 대한 하드웨어 해결책을 설명한다. Mutex 락, 세마포어, 모니터 및 조건 변수를 사용하여 임계구역 문제를 해결하는 방법을 보인다. 적은, 중간 및 심한 경쟁 시나리오에서 임계구역 문제를 해결하..." }, { "title": "OS CPU Scheduling", "url": "/posts/os-cpu-scheduling-01/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-10-29 13:00:00 +0900", "snippet": "목적 CPU 이용의 기본 단위가 된 스레드를 이해한다.실천 목표 다양한 CPU 스케줄링 알고리즘을 설명한다. 스케줄링 기준에 따라 CPU 스케줄링 알고리즘을 평가한다.한정된 CPU (코어) 자원과 수많은 프로세스(및 스레드) 한정된 CPU (코어)를 효율적으로 할당하기 위한 스케줄링 필요기본적인 개념 정리– CPU 스케줄러 한정된 CPU (코어)를 효율적으로 할당하기 위한 스케줄링 필요 준비(Ready) 상태인 프로세스 중 어떤 프로세스에게 CPU (코어)를 할당할지 선택 CPU ..." }, { "title": "OS Thread (2)", "url": "/posts/os-thread-02/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-10-23 13:00:00 +0900", "snippet": "목적 CPU 이용의 기본 단위가 된 스레드를 이해한다.실천 목표 스레드 풀, 포크 조인 및 그랜드 센트럴 디스패치를 포함하여 암시적 스레딩에 대한 다양한 접근 방식을 설명한다. Windows 및 Linux 운영체제가 스레드를 어떻게 나타내는지 설명한다. Pthread, Java 및 Windows 스레딩 API를 사용하여 다중 스레드 응용 프로그램을 설계한다.O/S의 모드가 두 가지, 스레드도 종류가 두 가지 사용자 스레드 O/S의 사용자 모드에서 동작하는 스레드 커널의 지원없이 운영됨 ..." }, { "title": "OS Thread (1)", "url": "/posts/os-thread-01/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-10-16 13:00:00 +0900", "snippet": "목적 CPU 이용의 기본 단위가 된 스레드를 이해한다.실천 목표 스레드의 기본 구성요소를 식별하고 스레드와 프로세스를 대조한다. 다중 스레드 프로세스를 설계할 때의 주요 이점과 중대한 과제를 설명한다.이제까지의 내용은 사실, 싱글 스레드 프로세스 내 스레드가 1개인 싱글 스레드그렇다면 스레드란 프로세스 내에서 특정 부분을 공유하며 별도로 수행되는 일꾼 경량 프로세스라고 할 수 있으며, CPU를 점유하는 기본적인 단위 한 프로세스 내 스레드가 공유하는 변수들 : code, data, files 스레드 별로 할당되는..." }, { "title": "OS Process (3)", "url": "/posts/os-process-03/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-10-10 13:00:00 +0900", "snippet": "목적 프로세스의 통신 방법을 다양한 측면에서 실습한다.실천 목표 파이프와 POSIX 공유 메모리를 사용하여 프로세스 간 통신을 수행하는 프로그램을 설계한다. 소켓과 원격 프로시저 호출을 사용하여 클라이언트-서버 통신을 설명한다. Linux 운영체제와 상호 작용하는 커널 모듈을 설계한다.IPC 실습 4가지 POSIX 공유 메모리 Mach 운영체제의 메시지 전달 시스템 Windows IPC (공유 메모리 사용) 파이프 (UNIX의 가장 오래된 IPC 기법)IPC 실습 (1) POSIX 공유 메모리 file과 sha..." }, { "title": "OS Process (2)", "url": "/posts/os-process-02/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-10-03 11:00:00 +0900", "snippet": "목적 프로세스 간 통신이 필요한 이유를 이해한다. 프로세스의 통신 방법을 다양한 측면에서 이해한다.실천 목표 공유 메모리 및 메시지 전달을 사용하는 프로세스 간 통신을 설명하고 대조한다.프로세스의 종류 (관계적 측면) 독립적인 프로세스 다른 프로세스들과 데이터를 공유하지 않는 프로세스 협력적인 프로세스 다른 프로세스들과 데이터를 공유하는 프로세스 O/S에서 프로세스 협력을 제공하는 이유로는 다음과 같은 이유가 있음 정보 공유 ..." }, { "title": "OS Process (1)", "url": "/posts/os-process-01/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-09-24 14:30:00 +0900", "snippet": "목적 프로세스의 개념을 이해한다. 프로세스 메모리 배치를 이해한다. 프로세스의 상태와 그 전이를 이해한다. 프로세스 제어 블록을 이해한다. 프로세스 스케줄링과 문맥교환을 이해한다. 프로세스 생성을 이해한다.실천 목표 프로세스의 개별 구성요소를 식별하고 운영체제에서 해당 구성요소가 어떻게 표현되고 스케줄되는지 기술한다. 운영체제에서 프로세스를 생성하고 종료하는 방법을 설명한다. 이러한 작업을 수행하는 적절한 시스템 콜을 사용하여 프로그램의 개발 등이 포함된다.프로세스의 개념 프로세스란 실행 중인 프로그램 프로세..." }, { "title": "OS Introduction", "url": "/posts/os-introduction/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-09-16 20:30:00 +0900", "snippet": "목적 운영체제의 역할을 전반적으로 이해한다. 컴퓨터 시스템의 구성 및 구조를 이해한다.실천 목표 컴퓨터 시스템의 일반적인 구성과 인터럽트의 역할을 이해한다. 현대 다중 처리기 컴퓨터 시스템의 구성요소에 관해 이해한다. 사용자 모드에서 커널 모드로의 전환에 대해 이해한다. 다양한 컴퓨팅 환경에서 운영체제가 어떻게 사용되는지 이해한다.운영체제의 역할 사용자 관점 사용의 용이성 : 사용자가 수행하는 작업을 최대화 시스템 관점 자원 할당자 : 효율적이고 공정하게 자원 할당 결정..." }, { "title": "OS Definition", "url": "/posts/os-definition/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-09-04 12:30:00 +0900", "snippet": "목적 운영체제의 정의에 나와있는 용어들을 이해해서, 운영체제의 정의를 이해한다.실천 목표 “컴퓨터” 용어를 이해한다. “정보” 용어를 이해한다. “처리” 용어를 이해한다. “프로그램” 용어를 이해한다. “운영체제” 용어를 이해한다.용어의 정의 꼬리잡기 Operating System 운영체제 An operating system is a software(program) that operates a computer system Computer 컴퓨터 A compute..." }, { "title": "OS Getting Started", "url": "/posts/os-getting-started/", "categories": "CS, OS", "tags": "CS, OS", "date": "2022-09-04 11:30:00 +0900", "snippet": "목적 Windows, Linux 운영체제를 실습하기 위한 하나의 환경을 구성한다.실천 목표 WSL2와 VSCode를 이용해서 OS 및 System Programming 스터디 환경을 구성한다.환경 구성 환경 구성도 Copyrightⓒ2022 Develiberta All rights reserved. 시스템 요구사항 확인 : Windows 10 x64 버전 1903+ 빌드 18362+ WSL 설치 과정 : WSL/가상머신 기능 켜기 설정 &amp;gt; 설..." }, { "title": "nvidia/deeops 라이브러리를 이용한 모니터링(prometheus, grafana) 테스트 구성", "url": "/posts/deepops_test/", "categories": "DevOps, Ansible", "tags": "DevOps, Ansible", "date": "2022-06-08 17:30:00 +0900", "snippet": "목적 deepops를 이용해서 필요한 환경을 구성할 수 있다. deepops를 이용해서 GPU 모니터링을 위한 prometheus, grafana 환경을 구성할 수 있다.실천 목표 deepops를 이용해서 nvidia driver, docker, prometheus, grafana를 설치하고 모니터링한다. deepops를 이용해서 (nvidia driver, docker 설치는 되어 있다고 가정하고 ★) prometheus, grafana를 설치하고 모니터링한다.deepops 개요 https://github.com/N..." }, { "title": "유닉스/리눅스 기본 학습 - 파일시스템", "url": "/posts/system-basic-linux_filesystem/", "categories": "Security, Linux", "tags": "Securiy, Linux", "date": "2022-01-24 21:25:00 +0900", "snippet": "학습 목표 UNIX/Linux 파일시스템을 이해하고 설명할 수 있다.UNIX/Linux 파일시스템 개요 물리적인 디스크 파티션 (fdisk) 파일시스템 (mkfs.~) 마운트 (mount)UNIX/Linux 파일시스템 개념 물리적인 저장장치(예. 하드 디스크)에 파일을 생성, 저장, 관리하기 위한 논리적인 자료구조 물리적인 디스크는 논리적인 파티션(partition)으로 나누어지며, 각 파티션별로 고유한 파일시스템 생성 (예. NTFS, EXT2, EXT3, EXT4)UNIX/Linux 파일시스템 구성 부트 블럭..." }, { "title": "nvidia/deeops 라이브러리를 이용한 모니터링(prometheus, grafana) 기본 구성", "url": "/posts/deepops_basic/", "categories": "DevOps, Ansible", "tags": "DevOps, Ansible", "date": "2022-01-20 11:00:00 +0900", "snippet": "학습 목표 deepops가 무엇인지 이해하고 설명할 수 있다. deepops를 이용해서 기본적인 환경을 구성할 수 있다.deepops 개요 https://github.com/NVIDIA/deepops GPU 인프라 및 자동화 도구deepops를 이용한 기본적인 환경 구성 Install a supported operating system on all nodes. Set up your provisioning machine. # Install software prerequisites and copy de..." }, { "title": "유닉스/리눅스 기본 학습 - 기본", "url": "/posts/system-basic-linux_basic/", "categories": "Security, Linux", "tags": "Securiy, Linux", "date": "2022-01-18 21:20:00 +0900", "snippet": "학습 목표 UNIX/Linux 로그인 과정을 이해하고 설명할 수 있다. UNIX/Linux 계정 정보 파일을 이해하고 설명할 수 있다. UNIX/Linux 그룹 정보 파일을 이해하고 설명할 수 있다. UNIX/Linux 입출력 재지정을 이해하고 설명할 수 있다. UNIX/Linux 파이프를 이해하고 설명할 수 있다.UNIX/Linux 로그인 과정 사용자 계정과 패스워드 입력 로그인 프로그램은 입력한 정보와 /etc/passwd 파일 비교 로그인 프로그램은 쉘 변수(HOME, SHELL, USER 또는 LOGNAM..." }, { "title": "Image Upload", "url": "/posts/image_upload/", "categories": "Blogging, Demo", "tags": "typography", "date": "2022-01-15 15:35:00 +0900", "snippet": "Image UploadCopyrightⓒ2022 Develiberta All rights reserved." }, { "title": "윈도우 기본 학습", "url": "/posts/system-basic-windows_basic/", "categories": "Security, Windows", "tags": "Securiy, Windows", "date": "2022-01-05 21:00:00 +0900", "snippet": "학습 목표 윈도우 인증 구성요소를 이해하고 설명할 수 있다. 윈도우 보안 식별자를 이해하고 설명할 수 있다. 윈도우 인증 구조를 이해하고 설명할 수 있다. 패스워드 크래킹 방법을 설명할 수 있다.윈도우 인증 구성요소 LSR (Local Security Authority) NT 보안의 중심 모든 계정의 로그인에 대한 검증 시스템 자원(파일 등)에 대한 접근 권한 검사 계정명과 SID 매칭 SRM이 생성한 감사 로그 기록 SAM (Security Accoun..." }, { "title": "정렬 알고리즘 (Sorting Algorithm)", "url": "/posts/sorting-algorithm/", "categories": "Logic, Algorithm", "tags": "Sorting, Algorithm", "date": "2021-08-24 21:25:00 +0900", "snippet": "학습 목표 정렬 알고리즘의 분류를 이해한다. 버블 정렬, 선택 정렬, 삽입 정렬, 셸 정렬, 퀵 정렬, 힙 정렬, 합병 정렬을 이해한다. 문제 상황에 따라 어떤 정렬 알고리즘이 적합한지 설명하고, 근거를 들어 설명할 수 있다.정렬 알고리즘의 분류 - 실행 방법에 따른 분류 비교식 정렬(comparative sort) 한 번에 두 개씩 비교해서 교환 예) 버블 정렬(bubble sort), 선택 정렬(selection sort), 삽입 정렬(insertion sort) ..." }, { "title": "Enable Google Page Views", "url": "/posts/enable-google-pv/", "categories": "Blogging, Tutorial", "tags": "google analytics, pageviews", "date": "2021-01-04 08:32:00 +0900", "snippet": "This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write m..." }, { "title": "Customize the Favicon", "url": "/posts/customize-the-favicon/", "categories": "Blogging, Tutorial", "tags": "favicon", "date": "2019-08-11 01:34:00 +0900", "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may need to replace them with your own. The following sections will guide you how to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, a..." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Blogging, Tutorial", "tags": "getting started", "date": "2019-08-09 21:55:00 +0900", "snippet": "PrerequisitesFollow the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll and Bundler. Please note that the version of Ruby must meet the requirements of the theme on RubyGems.org.InstallationThere are two ways to get the theme: Install from RubyGems - Easy to update, isolate ir..." }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2019-08-08 15:10:00 +0900", "snippet": "Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts/ of the root directory. Please note that the EXTENSION must be one of md and markdown.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD..." }, { "title": "Text and Typography", "url": "/posts/text-and-typography/", "categories": "Blogging, Demo", "tags": "typography", "date": "2019-08-08 12:33:00 +0900", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at o..." } ]
